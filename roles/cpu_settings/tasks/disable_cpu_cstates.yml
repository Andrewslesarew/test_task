- name: Ensure required tools are installed
  ansible.builtin.apt:
    name: grub2-common
    state: present

- name: Backup current GRUB configuration
  ansible.builtin.copy:
    src: /etc/default/grub
    dest: /etc/default/grub.bak
    remote_src: yes
    backup: yes

- name: Read current GRUB configuration
  ansible.builtin.shell: grep "^GRUB_CMDLINE_LINUX=" /etc/default/grub | cut -d'=' -f2- | tr -d '"'
  register: grub_current
  changed_when: false
  become: true

- name: Ensure GRUB_CMDLINE_LINUX contains required kernel parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    line: 'GRUB_CMDLINE_LINUX="{{ updated_grub_cmdline | join(" ") }}"'
  vars:
    current_grub_cmdline: "{{ grub_current.stdout | default('') }}"
    required_params:
      - intel_idle.max_cstate=0
      - processor.max_cstate=0
    updated_grub_cmdline: "{{ current_grub_cmdline.split(' ') | union(required_params) }}"
  register: grub_update

- name: Update GRUB configuration
  ansible.builtin.command:
    cmd: update-grub
  when: grub_update.changed

- name: Reboot the system to apply changes
  ansible.builtin.reboot:
    msg: "Rebooting to apply CPU C-states settings."
    connect_timeout: 5
    reboot_timeout: 300
  when: grub_update.changed